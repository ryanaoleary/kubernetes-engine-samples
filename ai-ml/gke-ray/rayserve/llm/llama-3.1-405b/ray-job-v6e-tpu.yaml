apiVersion: ray.io/v1
kind: RayJob
metadata:
  name: v6e-4-job
spec:
  entrypoint: python /home/ray/samples/tpu_print_resources.py
  runtimeEnvYAML: |
    pip:
      - jax[tpu]==0.4.33
      - -f https://storage.googleapis.com/jax-releases/libtpu_releases.html

  rayClusterSpec:
    rayVersion: '2.37.0'
    headGroupSpec:
      rayStartParams: {}
      template:
        spec:
          containers:
            - name: ray-head
              image: rayproject/ray:2.37.0-py310
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265
                  name: dashboard
                - containerPort: 10001
                  name: client
              resources:
                limits:
                  cpu: "8"
                  ephemeral-storage: 5Gi
                  memory: 40G
                requests:
                  cpu: "8"
                  ephemeral-storage: 5Gi
                  memory: 40G
              volumeMounts:
                - mountPath: /home/ray/samples
                  name: code-sample
          volumes:
            - name: code-sample
              configMap:
                name: ray-job-code-sample
                items:
                  - key: tpu_print_resources.py
                    path: tpu_print_resources.py
    workerGroupSpecs:
      - replicas: 1
        minReplicas: 1
        maxReplicas: 1
        numOfHosts: 4
        groupName: tpu-group
        rayStartParams: {}
        template:
          spec:
            securityContext:
              runAsUser: 0
            containers:
              - name: ray-worker
                image: rayproject/ray:2.37.0-py310
                lifecycle:
                  preStop:
                    exec:
                      command: [ "/bin/sh","-c","ray stop" ]
                resources:
                  limits:
                    cpu: "100"
                    ephemeral-storage: 20Gi
                    google.com/tpu: "4"
                    memory: 200G
                  requests:
                    cpu: "100"
                    ephemeral-storage: 20Gi
                    google.com/tpu: "4"
                    memory: 200G
            nodeSelector:
              cloud.google.com/gke-tpu-accelerator: tpu-v6e-slice
              cloud.google.com/gke-tpu-topology: 4x4
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ray-job-code-sample
data:
  tpu_print_resources.py: |
    import ray
    import jax

    ray.init()

    @ray.remote(resources={"TPU": 4})
    def tpu_cores():
        return "TPU cores:" + str(jax.device_count())

    num_workers = int(ray.available_resources()["TPU"]) // 4
    result = [tpu_cores.remote() for _ in range(num_workers)]
    print(ray.get(result))

